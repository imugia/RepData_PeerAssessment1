print
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
dir()
data<-read.table("getdata_data_DATA.gov_NGAP.xlsx")
data<-read.csv("getdata_data_DATA.gov_NGAP.xlsx")
library(xlsx2)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rjava")
install.packages("r java")
install.packages("rJava")
library(xlsx)
library(xlsx)
read.xlsx(Error: 无法载入程辑包‘rJava’,sheetIndex=1)
library(xlsx)
?read.xlsx()
install.packages("rJava")
install.packages("rJava")
library(xlsx)
library(rJava)
library(xksxjars)
library(xlsxjars)
library(xlsx)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,startRow=1,endRow=1)
data
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx")
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1)
data
head(data)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,rowIndex=18:23,cOlIndex=7:15)
data
head(data)
dat<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE,rowIndex=18:23,cOlIndex=7:15)
dat
rowIndex=18:23
rowIndex
dat<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE,rowIndex=18:23,colIndex=7:15)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages(XML)
install.packages("XML")
install.packages(XML)
library(XML)
fileurl<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata_data_restaurants.xml"
doc<-xmlTreeParse(fileurl,useInternal=TRUE)
?xmlTreeParse()
doc<-xmlTreeParse(fileurl,useInternalNodes=TRUE)
dir()
doc<-xmlTreeParse("getdata_data_restaurants.xml")
doc
head(doc)
rootnode<-xmlRoot(doc)
rootnode
xmlNmae(rootnode)
xmlName(rootnode)
names(rootnode)
rootnode[[1]]
rootnode[[1][1]]
rootnode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xmlSApply(rootnode,xmlValue)
names(rootnode)
rootnode[1]
rootnode[1][1]
?xmlRoot()
temp<-xmlRoot(rootnode)
xpathSApply(rootnode,"//zipcode",xmlValue)
?xpathSApply()
xpathSApply(doc,"//zipcode",xmlValue)
xpathSApply(rootnode,"//zipcode")
?xmlValue
xpathSApply(doc,"//zipcode",xmlValue)
xpathSApply(rootnode,"//zipcode",xmlValue)
doc2<-xmlTreeParse("getdata_data_restaurants.xml")
rootnode2<-xmlRoot(doc2)
xmlName(rootnode2)
names(rootnode2)
rootnode2[[1]]
xpathSApply(rootnode2,"//zipcode",xmlValue)
xpathSApply(rootnode2,"zipcode",xmlValue)
xpathLApply(rootnode2,"//zipcode",xmlValue)
?xpathSApply
xpathApply(rootnode2,"//zipcode",xmlValue)
rootnode2[[1]]
?xmlTreeParse
doc2<-xmlTreeParse("getdata_data_restaurants.xml",encidung="UTF-8")
doc2<-xmlTreeParse("getdata_data_restaurants.xml",encoding="UTF-8")
Sys.setlocale(category="LC_ALL", locale="en_US.UTF-8")
xpathApply(rootnode2,"//zipcode",xmlValue)
doc2
doc2<-iconv(doc,to="UTF-8")
doc2<-xmlTreeParse("getdata_data_restaurants.xml")
doc2<-iconv(doc2,to="UTF-8")
xpathApply(rootnode2,"//zipcode",xmlValue)
rootnode2<-xmlRoot(doc2)
doc2
doc2<-xmlTreeParse("getdata_data_restaurants.xml")
doc2
doc2<-xmlTreeParse("getdata_data_restaurants.xml")
rootnode2<-xmlRoot(doc2)
xpathApply(rootnode2,"//zipcode",xmlValue)
xpathApply(rootnode2,"//div/zipcode",xmlValue)
zipcode<-xpathApply(rootnode2,"//div/zipcode",xmlValue)
zipcode
zipcode<-xpathApply(rootnode2,"//name/zipcode",xmlValue)
xpathApply(rootnode2,"//zipcode",xmlValue)
zipcode<-xpathApply(rootnode2,"//row/zipcode",xmlValue)
doc2<-xmlParse("getdata_data_restaurants.xml")
xpathApply(doc2,"//zipcode",xmlValue)
zipcode<-xpathApply(doc2,"//zipcode",xmlValue)
length(zipcode[zipcode=='21231'])
DT<-fread("getdata_data_ss06pid.csv")
?fread()
library(data.table)
install.packages("data.table")
library(data.table)
DT<-fread("getdata_data_ss06pid.csv")
DT
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean) )
install.packages("RMySQL")
library(RMySQL)
install.packages("DBI")
install.packages("DBI")
library(RMySQL)
library(DBI)
library(RMySQL)
install.packages("httpuv")
library(rhdf5)
install.packages(rhdf5)
install.packages("rhdf5")
source("http:..bioconductor.org/bioLite.r")
source("http://bioconductor.org/bioLite.r")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
library(XML)
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
html<-htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"//title",xmlValue)
?xpathSApply
?xpathSApply()
?htmlTreeParse()
html[10]
str(html)
html
html<-htmlTreeParse(url,useInternalNodes=T)
temp<-xmlRoot(html)
temp
xmlName(temp)
temp[[1]]
temp[[10]]
temp[10]
temp[100]
temp[30]
html
temp<-xpathSApply(html)
temp<-xpathSApply(html,"*")
temp[1]
temp[2]
temp
temp<-xpathSApply(html,"")
temp<-xpathSApply(html,Xmlvalue)
temp<-xmlRoot(html)
temp2<-xpathSApply(temp,xmlvalue)
temp2<-xpathSApply(temp,xmlValue)
names[temp]
temp
names(temp)
xmlName(temp)
?htmlTreeParse()
html<-readLines(url)
html[10]
nchar(html[]10)
nchar(html[10])
nchar(html[20])
nchar(html[30])
nchar(html[100])
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
html<-htmlTreeParse(url,useInternalNodes=T)
html<-readLines(url)
html
head(html)
?sum()
?read.fwf()
read.fwf(url,widths=c(10,9,1,8,4,1,8,4,1,8,4,4))
data<-read.fwf(url,widths=c(10,9,1,8,4,1,8,4,1,8,4,4))
head(data)
head(data)
mean(data[5])
mean(na.omit(data[5]))
data[5]
head(data[5])
head(is.na(data[5])
)
mean((data[5,5:1258])
)
mean(data[5:1258,5])
mean(data[5,5:1258])
mean(data[5,1])
mean(data[5,5])
mean(data[5])
data[5,5]
data[5,4]
data[6,5]
mean(data[5:1258,5])
head(data{5:1258,5})
head(data{5:1258,5])
head(data[5:1258,5])
temp<-data[5:1258,5]
mean(temp)
?mean()
mean(1,2,3)
mean(1,2,5)
mean(1,2,10)
mean(1,2,10,1,2,3)
mean(1,2
)
mean(1,5)
sum(temp)
temp<-as.numeric(temp)
mean(temp)
sum(temp)
length(temp)
head(temp)
temp<-data[5:1258,5]
temp2<-as.double(temp)
sum(temp2)
head(temp2)
head(temp)
class(temp)
class(temp[1])
class(temp[2])
str(data[5])
str(data[5,1])
data<-read.fwf(url,widths=c(10,9,1,8,4,1,8,4,1,8,4,4),stringsAsFactors=FALSE)
class(data[5,5])
temp<-as.numeric(data[5:1258,5])
temp
sum(temp)
library(knitr)
?echo
?echo()
dir()
setwd("e:/data/repdata_peerassessment1")
setwd("e:/data\repdata_peerassessment1")
setwd("e:/rdata/repdata_peerassessment1")
dir()
unzip(activity.zip)
unzip("activity.zip")
data<-read.csv("activity.csv")
data
data[2,1]
data[1,2]
class(data)
class(data[1,2])
?level
?factor
levels(data[2])
levels(data)
levels(data[1,2])
day<-levels(data$date);num<-rep(0,times=61)
day
day<-levels(data$date)
day
num
total<-data.frame(day,num)
for(i in 1:61){
total$num[i]<-sum(data$steps[data$date==day[i]],na.rm=T)
}
total
mean(total[num])
mean(total$num)
factor(data$date)
stepbyday<-tapply(data1$steps,data1$date,sum)
stepbyday<-tapply(data$steps,data1$date,sum)
stepbyday<-tapply(data$steps,data$date,sum)
stepbyday
hist(stepbyday, xlab="total steps by day",ylab="frequency (Days)",main="number of daily steps", breaks=20)
na.omit(stepbyday)
hist(stepbyday, xlab="total steps by day",ylab="frequency (Days)",main="number of daily steps", breaks=53)
mean(stepbyday)
mean(stepbyday,rm.na=TRUE)
?mean()
mean(stepbyday,na.rm=TRUE)
median(stepbyday,na.rm=TRUE)
stepsbyinterval_mean<-tapply(data$steps,date$interval, mean, na.rm=T)
date$interval
stepbyintervak_mean<-tapply(data$steps,data$interval,mean,na.rm=TRUE)
stepbyintervak_mean
plot(stepbyintervak_mean,xlab="total steps by interval",ylab="average number of steps",main="daily activity pattern")
plot(stepbyintervak_mean,xlab="total steps by interval",ylab="average number of steps",main="daily activity pattern",type="l")
stepbyinterval_mean<-tapply(data$steps,data$interval,mean,na.rm=TRUE)
max(stepbyinterval_mean)
data$interval[max(stepbyinterval_mean)]
?length
length(data[is.na(data[1])])
length(data[is.na(data$steps)])
head(data)
head(data[1])
length(data[is.na(data$steps)])
length(data[is.na(data[1])])
sum(data[is.na(data[1])])
sum(is.na(data[1]))
sum(is.na(data$steps))
length(data[1,1])
length(data[1:3,1])
length(data[is.na(data[1:3,1])])
length(data[is.na(data[,1])])
length(data[is.na(data[1])])
length(data[is.na(data[1:100,1])])
length(data[is.na(data[1:3,1])])
length(data[is.na(data[1:5,1])])
length(data[is.na(data[4,1])])
length(data[is.na(data[5,1])])
is.na(data[5,1])
is.na(data[1:5,1])
is.na(data[1:10,1])
data[is.na(data[5,1])]
data[is.na(data[1:5,1])]
data$newsteps<-data$steps
summary(data)
length(data[1])
length(data)
data
stepsbyinterval_mean
stepbyinterval_mean
as.data.frame(stepbyinterval_mean)
as.data.frame(stepbyinterval_mean)[1]
as.data.frame(stepbyinterval_mean)[1,1]
sum(as.data.frame(stepbyinterval_mean)[1:3,1])
(as.data.frame(stepbyinterval_mean)[1:3,1]
)
as.data.frame(stepbyinterval_mean)[121,1]
data$newsteps<-data$steps
for (i in 1:17568){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%288),1]
}
}
as.data.frame(stepbyinterval_mean)[121,1]
temp<-as.data.frame(stepbyinterval_mean)[121,1]
temp
temp<-data
temp[1,1]<-as.data.frame(stepbyinterval_mean)[121,1]
temp[1,1]
data$newsteps<-data$steps
head(data)
data[1,4]
data[1:5,4]
temp[1,1]<-as.data.frame(stepbyinterval_mean)[121%288,1]
121%288
121%%288
for (i in 1:17568){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
temp[1,1]<-as.data.frame(stepbyinterval_mean)[121%%288,1]
temp[1,1]
for (i in 1:1){
for (i in 1:1){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:100){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:1000){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:280){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
temp[1,1]<-as.data.frame(stepbyinterval_mean)[1210%%288,1]
temp[1,1]
for (i in 1:2800){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:800){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:500){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
stepbyinterval_mean
for (i in 1:300){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288),1]
}
}
for (i in 1:288){
for (i in 1:288){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[(i%%288+1),1]
}
}
temp[1,1]<-as.data.frame(stepbyinterval_mean)[1210%%288+1,1]
temp[1,1]
for (i in 1:288){
if(is.na(data[i,1])){
data[i,4]<-as.data.frame(stepbyinterval_mean)[((i-1)%%288+1),1]
}
}
data[1,1]
data[1,4]
newdata<-data.frame(data[,4],data[,2],data[,3])
head(newdata)
?data.frame()
?names()
names(newdata)<-c("1","2","3")
head(newdata)
head(data)
names(newdata)<-c("steps","date","interval")
head(newdata)
hist(newdata)
newstepbyday_sum<-tapply(newdata$steps,newdata$date,sum)
hist(newstepbyday_sum, xlab="total steps by day",ylab="frequency (Days)",main="number of daily steps(new)", breaks=61)
mean(newstepbyday_sum,na.rm=TRUE)
median(newstepbyday_sum,na.rm=TRUE)
class(data[1,2])
data[1,2]
as.date
?as.date()
?as.Date()
as.Date(data[1,2])
class(as.Date(data[1,2]))
data[2]<as.Date(data[2])
data[2]<-as.Date(data[2])
newdata$wd<-weekdays(as.Date(newdata[,2]))
head(newdata)
星期六
newdata[10]
newdata[,10]
newdata[10,1]
newdata[10,5]
newdata[10,4]
newdata[100,4]
newdata[1000,4]
newdata[1010,4]
newdata[1110,4]
newdata[1610,4]
newdata$wd<-weekdays(as.Date(newdata[,2]))
newdata$wd[newdata$wd %in% c("星期一","星期二","星期三","星期四","星期五")]<-"weekday"
newdata$wd[newdata$wd=="星期六"|newdata$wd=="星期日"]<-"weekend"
head(newdata)
stepsbyinterval_weekday_mean<-tapply(subset(newdata,day=="weekday")$steps,subset(newdata,day=="weekday")interval,mean,na.rm=TRUE)
stepsbyinterval_weekday_mean<-tapply(subset(newdata,wd=="weekday")$steps,subset(newdata,wd=="weekday")interval,mean,na.rm=TRUE)
stepsbyinterval_weekday_mean<-tapply(subset(newdata,wd=="weekday")$steps,subset(newdata,wd=="weekday")$interval,mean,na.rm=TRUE)
stepsbyinterval_weekday_mean
stepsbyinterval_weekend_mean<-tapply(subset(newdata,wd=="weekend")$steps,subset(newdata,wd=="weekend")$interval,mean,na.rm=TRUE)
stepsbyinterval_weekend_mean
plot(stepsbyinterval_weekday_mean)
plot(stepsbyinterval_weekday_mean,type="l")
plot(stepsbyinterval_weekend_mean,type="l")
par(mfrow = c(2, 1))
plot(stepsbyinterval_weekday_mean, type="l", xlab="5 minute interval", ylab="Average number of steps", main="weekdays")
plot(stepsbyinterval_weekend_mean, type="l", xlab="5 minute interval", ylab="Average number of steps", main="weekends")
unzip("activity.zip")
